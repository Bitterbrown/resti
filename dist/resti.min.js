var Bitter=function(){void 0===jQuery&&console.error("Resti requires jquery to make ajax calls");var a={api:{uri:!1,version:!1},ajax:{method:"GET",async:!0,timeout:6e4}};return{_ids:[],_instances:{},_errors:{IS_FROZEN:"This model is frozen and can't accept updates",IS_NOT_MODEL:"The given var is not a model",MODEL_ALREADY_EXISTS:"The model is already present: skipping",MODEL_HAS_NO_ID:"The model doesn't have an ID",NO_API_URI:"No API uri is provided",INDEX_NOT_FOUND:"Can't find any model with that index"},defaults:a,modules:{require:function(a,b){for(var c=0;c<b.length;c++)switch(b[c]){case"isModel":if(!(a instanceof Bitter.Model))return this.emit("error",Bitter._errors.IS_NOT_MODEL);break;case"hasApiUrl":if(Bitter.defaults.api.uri===!1||""===Bitter.defaults.api.uri||null===Bitter.defaults.api.uri)return this.emit("error",Bitter._errors.NO_API_URI);case"modelHasID":if(void 0===a.attributes||void 0===a.attributes.id)return this.emit("error",Bitter._errors.MODEL_HAS_NO_ID);case"unfrozen":if(a.frozen===!0)return this.emit("error",Bitter._errors.IS_FROZEN);case"unique":if(Bitter.isCollection(this)&&this.find(a)!==!1)return this.emit("error",Bitter._errors.MODEL_ALREADY_EXISTS)}return!0}},ajax:function(){for(prop in a.ajax)void 0===arguments[0][prop]&&(arguments[0][prop]=a.ajax[prop]);jQuery.ajax.apply(this,arguments)},extend:function(a,b){for(prop in b)a[prop]=b[prop]},getID:function(){for(id=1;void 0!==Bitter._instances["b"+id];)id++;return"b"+id},isModel:function(a){return a instanceof Bitter.Model&&void 0!==a.id},isCollection:function(a){return a instanceof Bitter.Collection&&void 0!==a.id}}}();Bitter.Events={_events:[],on:function(a,b){void 0===this._events[a]&&(this._events[a]=new Array),this._events[a].push(b)},emit:function(a,b){if(void 0!==this._events[a])for(var c=0;c<this._events[a].length;c++)this._events[a][c](b||null)},clearEvents:function(){this._events=[]}},Bitter.Model=function(a){"use strict";this.id=Bitter.getID(),this.attributes=a||{},this.frozen=!1,Bitter._instances[this.id]=this.attributes},Bitter.extend(Bitter.Model.prototype,Bitter.Events),Bitter.extend(Bitter.Model.prototype,{__require:Bitter.modules.require,attach:function(a,b,c){this.on("change:"+a,function(a){b[c||"text"](a)})},create:function(){if(this.__require(this,["hasApiUrl","modelHasID"])===!0){var a=this;return Bitter.ajax({url:this.url(),method:"POST",success:function(b){a.parse(b),a.doneInternal(b)}}),this}},"delete":function(){return this.__require(this,["hasApiUrl","modelHasID"])===!0?(Bitter.ajax({url:this.url(),method:"DELETE",success:function(a){_this.doneInternal(a)}}),this):void 0},done:function(a){this.doneCallback=a},doneInternal:function(a){void 0!==this.doneCallback&&"function"==typeof this.doneCallback&&(this.doneCallback(a),this.doneCallback=void 0)},fetch:function(){if(this.__require(this,["hasApiUrl","modelHasID"])===!0){var a=this;return Bitter.ajax({url:this.url(),method:"GET",success:function(b){a.reset(a.parse(b)),a.doneInternal(b)}}),this}},freeze:function(a){this.frozen=a||!0},get:function(a){return this.attributes[a]},link:function(a,b,c){if(this.__require(this,["unfrozen"])===!0){var d=this;b.on("change:"+c,function(b){d.attributes[a]=b})}},parse:function(a){return a},reset:function(a){this.__require(this,["unfrozen"])===!0&&(this.attributes=a||{},this.emit("change",this))},set:function(a,b){this.__require(this,["unfrozen"])===!0&&(this.attributes[a]=b,this.emit("change",this),this.emit("change:"+a,b))},unfreeze:function(){this.frozen=!1},url:function(){return Bitter.defaults.api.uri+"/"+this.get("id")}}),Bitter.Collection=function(a){"use strict";this.id=Bitter.getID(),this.collection=a||[],this.length=this.collection.length,Bitter._instances[this.id]=this.collection,this.bindCollectionEvents.apply(this),this.initialize.apply(this,arguments)},Bitter.extend(Bitter.Collection.prototype,Bitter.Events),Bitter.extend(Bitter.Collection.prototype,{__require:Bitter.modules.require,add:function(a){this.__require.call(this,a,["isModel","unique"])===!0&&(this.collection.push(a),this.length=this.collection.length,this.emit("add",a),this.emit("change",this))},at:function(a){return void 0!==this.collection[a]?this.collection[a]:void this.emit("error",Bitter._errors.INDEX_NOT_FOUND)},bindCollectionEvents:function(){var a=this;this.clearEvents();for(var b=0;b<this.collection.length;b++)Bitter.isModel(this.collection[b])&&this.collection[b].on("change",function(b){a.emit("change",b)})},find:function(a){Bitter.isModel(a)&&(a=a.id);for(var b=0;b<this.collection.length;b++)if(this.collection[b].id==a)return this.collection[b];return!1},first:function(){return this.at(0)},last:function(){return this.at(this.collection.length-1)},initialize:function(){}});